@model GMCINVENTORYSYSTEM.Models.AllModels

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    List<SelectListItem> MainList = new List<SelectListItem>();

    MainList.Add(new SelectListItem
    {

        Text = "No Record",
        Value = "0"
    });


    List<SelectListItem> Typelist = new List<SelectListItem>();

    Typelist.Add(new SelectListItem
    {

        Text = "Common",
        Value = "Common"
    });

    Typelist.Add(new SelectListItem
    {

        Text = "Unique",
        Value = "Unique"
    });

}

<title>Item Management</title>

<div class="page-header">
    <h1>Edit Item Management</h1>
    <ol class="breadcrumb">
        <li><a>Item Management</a></li>
        <li class="active">Edit</li>
    </ol>
</div>

<div class="content-wrap">
    <div class="panel panel-default">
        <div class="panel-heading">
            <span>Date: @DateTime.Now.ToShortDateString()</span>
        </div>
        <div class="row">
            <div class="col-md-12">

                @using (Html.BeginForm("UpdateItemMasterInformation", "Maintenance", FormMethod.Post, new { @id = "formvalidationtooltip", @class = "ItemMasterform", @role = "form" }))
                {
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-6">
                                @if (Model.Maintenance.CheckIfAlreadyTransac == "NotExist")
                                {
                                    <div class="form-group input-group">
                                        <span class="input-group-addon">Item Code</span>
                                        @Html.HiddenFor(item => item.Maintenance.OldStockNo)
                                        @Html.TextBoxFor(item => item.Maintenance.StockNo, new { @class = "form-control validate[required]", placeholder = "Item Code" })
                                    </div>
                                }
                                else
                                {
                                    <div class="form-group input-group">
                                        <span class="input-group-addon">Item Code</span>
                                        @Html.HiddenFor(item => item.Maintenance.OldStockNo)
                                        @Html.TextBoxFor(item => item.Maintenance.StockNo, new { @class = "form-control validate[required]", placeholder = "Item Code", disabled = "disabled" })
                                    </div>
                                }

                                <div class="form-group input-group">
                                    <span class="input-group-addon">Part Name</span>
                                    @Html.TextBoxFor(item => item.Maintenance.ItemName, new { @class = "form-control validate[required]", placeholder = "Part Name" })
                                </div>

                                <div class="form-group input-group">
                                    <span class="input-group-addon">Specification</span>
                                    @Html.TextBoxFor(item => item.Maintenance.Specification, new { @class = "form-control validate[required]", placeholder = "Specification" })
                                </div>

                                <div class="form-group input-group">
                                    <span class="input-group-addon">Group</span>
                                    @Html.DropDownListFor(item => item.Maintenance.Group, Model.Maintenance.ddlGroup, new { @class = "form-control validate[required]", placeholder = "User Group", style = "width:100%" })
                                </div>

                                <div class="form-group input-group">
                                    <span class="input-group-addon">Details</span>
                                    @Html.TextBoxFor(item => item.Maintenance.Details, new { @class = "form-control", placeholder = "Details" })
                                </div>

                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group input-group">
                                            <span class="input-group-addon">Status</span>
                                            @Html.DropDownListFor(item => item.Maintenance.Status, new SelectList(Model.Maintenance.StatusList, "Value", "Text", Model.Maintenance.Status)
                                            , new { @class = "form-control", @style = "border-radius: 0; width: 100%;" })
                                            <span id="ShowhideSpan" style="display:none" class="input-group-addon">-</span>
                                            @Html.DropDownListFor(item => item.Maintenance.Pullout, MainList, new { @class = "form-control", style = "width:100%; display:none" })
                                            @Html.HiddenFor(item => item.Maintenance.HiddenPullout)
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group input-group">
                                    <span class="input-group-addon">UOM</span>
                                    @Html.TextBoxFor(item => item.Maintenance.Unit, new { @class = "form-control validate[required]", placeholder = "UOM" })
                                </div>

                                <div class="form-group input-group">
                                    <span class="input-group-addon">Description</span>
                                    @Html.TextBoxFor(item => item.Maintenance.ItemDescription, new { @class = "form-control", placeholder = "Description" })
                                </div>

                                <div class="form-group input-group">
                                    <span class="input-group-addon">Stock On Hand</span>
                                    @Html.TextBoxFor(item => item.Maintenance.StockOnHand, new { @class = "form-control validate[required]", placeholder = "Stock on hand", disabled = "disabled", oninput = "isNumber(this)", onpaste = "return false" })
                                </div>

                                <div class="form-group input-group">
                                    <span class="input-group-addon">Safety Level</span>
                                    @Html.TextBoxFor(item => item.Maintenance.SafetyStock, new { @class = "form-control validate[required]", placeholder = "Safety Level", oninput = "isNumber(this)", onpaste = "return false" })
                                </div>

                                <div class="form-group input-group">
                                    <span class="input-group-addon">Critical Level</span>
                                    @Html.TextBoxFor(item => item.Maintenance.CriticalOrder, new { @class = "form-control validate[required]", placeholder = "Critical Level", oninput = "isNumber(this)", onpaste = "return false" })
                                </div>

                                <div class="form-group input-group" style="display:none;" id="DivDesignation">
                                    <span class="input-group-addon">Designation</span>
                                    @Html.DropDownListFor(item => item.Maintenance.Designation, Model.Maintenance.ddlDesignation, new { @class = "form-control validate[required]", placeholder = "User Designation", style = "width:100%" })
                                </div>
                            </div>

                            <div class="col-md-12" id="ItemLocationShowHide">
                                <div class="row">
                                    <div class="table table-responsive">
                                        <table class="table table-hover" id="ItemLocationTable">
                                            <thead>
                                                <tr>
                                                    <th> </th>
                                                    <th> </th>
                                                    <th> </th>
                                                    <th> </th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var row in Model.Maintenance.PopulateItemLocation)
                                                {
                                                    <tr id="ItemLocationBody">
                                                        <td class="col-md-1 text-center">
                                                            <div class="form-group">
                                                                <a href="#" name="tbnadd" id="tbnadd" class="btn btn-link"><i class="di di-plus"></i></a>
                                                                <a href="#" name="btndelete" id="btndelete" class="btn btn-link"><i class="di di-minus"></i></a>
                                                            </div>
                                                        </td>
                                                        <td class="col-md-3">
                                                            <div class="form-group input-group">
                                                                <span class="input-group-addon">Rack #</span>
                                                                @Html.DropDownListFor(Maintenance => row.MainNo, new SelectList(Model.Maintenance.ddlMain, "Value", "Text", row.MainNo), "Select Main Location", new { @class = "form-control validate[required] select2Search ", @style = "width:100%" })
                                                            </div>
                                                        </td>
                                                        <td class="col-md-3">
                                                            <div class="form-group input-group">
                                                                <span class="input-group-addon">Drawer #</span>
                                                                @Html.DropDownListFor(Maintenance => row.DrawerNo, MainList, "No Record", new { @class = "form-control select2Search ", @style = "width:100%" })
                                                            </div>
                                                        </td>
                                                        <td class="col-md-3">
                                                            <div class="form-group input-group">
                                                                <span class="input-group-addon">Bin #</span>
                                                                @Html.DropDownListFor(Maintenance => row.BinNo, MainList, "No Record", new { @class = "form-control select2Search", @style = "width:100%" })
                                                            </div>
                                                        </td>
                                                        <td style="display:none;">
                                                            @Html.HiddenFor(HiddenFor => row.HiddenBin);
                                                        </td>
                                                        <td style="display:none;">
                                                            @Html.HiddenFor(HiddenFor => row.HiddenDrawer);
                                                        </td>

                                                    </tr>
                                                }

                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>



                            @*<div class="col-md-3" style="display:none;">
                                    <div class="form-group input-group">
                                        <span class="input-group-addon">Cabinet #</span>
                                        @Html.DropDownListFor(Maintenance => Maintenance.MainNo, MainList, new { @class = "form-control select2Search", @style = "width:100%" })
                                    </div>
                                </div>

                                <div class="col-md-3" style="display:none;">
                                    <div class="form-group input-group">
                                        <span class="input-group-addon">Drawer #</span>
                                        @Html.DropDownListFor(Maintenance => Maintenance.MainNo, MainList, new { @class = "form-control select2Search", @style = "width:100%" })
                                    </div>
                                </div>*@

                        </div>
                        <!--START: Content Wrap-->
                    </div>
                    <div class="panel-footer">
                        <div class="row">
                            <div class="pull-right" style="margin-right:10px">
                                <a class="btn btn-danger" href="@Url.Action("ItemManagement","Maintenance",new { @id="table"})">Back</a>
                                <button class="btn btn-primary" id="btnSave" type="submit">Save</button>
                            </div>
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script>
        $(window).on('load',function(){
            $(document).ready(function () {
                PopulateDrawerItemLocation();
                var Group = $("#Maintenance_Group").val();
                var Status = $('#Maintenance_Status').val();
                var Pullout = $('#Maintenance_HiddenPullout').val();

                if (Group == "1") {
                    $("#DivDesignation").hide();
                    $("#ItemLocationShowHide").show();
                }
                else {
                    $("#DivDesignation").show();
                    $("#ItemLocationShowHide").hide();
                }
                if (Status == "1") {
                    $('#ShowhideSpan').hide();
                    $('#Maintenance_Pullout').hide();
                }
                else if (Status == "2") {
                    $('#ShowhideSpan').show();
                    $('#Maintenance_Pullout').show();

                    $.ajax({
                        url: '/Maintenance/RetreivePullout',
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify({
                        }),

                        dataType: "json",
                        success: function (data) {
                            var $ele = $("#Maintenance_Pullout");
                            $ele.empty();
                            $.each(data, function (i, value) {
                                $ele.append(
                                    $('<option></option>').val(value.Value).text(value.Text));
                                if (data[i].Value == Pullout) {
                                    //$ele.attr("selected", "selected");
                                    $ele.val(Pullout).change();
                                }
                                //$ele.append($ele);
                            });
                        }
                    })

                    if (Pullout == "1") {
                        $("#ItemLocationShowHide").show();
                    }
                    else if (Pullout == "2") {
                        $("#ItemLocationShowHide").hide();
                    }
                }
            })

            function PopulateDrawerItemLocation() {

                $("#ItemLocationTable tbody tr").each(function () { //Loop through the Table rows
                    var $row = $(this);


                    var MainNo = $("#row_MainNo", $row).val();
                    var DrawerNo = $("#row_HiddenDrawer", $row).val();
                    var $ele = $("#row_DrawerNo", $row);

                    $.ajax({
                        url: '/Maintenance/RetreiveDrawerItemLocation',
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify({
                            MainNo: MainNo,
                        }),

                        dataType: "json",
                        success: function (data) {

                            $ele.empty();
                            $ele.append($('<option></option>').val("").text("Select Drawer No."));
                            $.each(data, function (i, value) {
                                //$ele.append(
                                //    $('<option></option>').val(value.Value).text(value.Text));
                                //if (data[i].Text == DrawerNo) {
                                //    //$ele.attr("selected", "selected");
                                //    $ele.val(DrawerNo).change();
                                //}
                                ////$ele.append($ele);
                                var $option = $("<option></option>",
                                {
                                    text: value.Text,
                                    value: value.Value
                                });

                                //if selected_id = id then this is the selected value
                                if (DrawerNo == value.Value) {  //use == instead of ===
                                    $option.attr("selected", "selected");
                                }
                                $ele.append($option);
                            });
                            PopulateBinItemLocation($row);

                            return $ele.prop("outerHTML");
                        }
                    })
                });


            }

            function PopulateBinItemLocation($row) {
                var DrawerNo = $("#row_HiddenDrawer", $row).val();
                var BinNo = $("#row_HiddenBin", $row).val();
                var MainNo = $("#row_MainNo", $row).val();
                var $ele = $("#row_BinNo", $row);

                if (DrawerNo == "") {
                    $.ajax({
                        url: '/Maintenance/RetreiveNoDrawerItemLocation',
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify({
                            MainNo: MainNo,
                        }),

                        dataType: "json",
                        success: function (data) {

                            $ele.empty();
                            $ele.append($('<option></option>').val("").text("Select Bin No."));
                            $.each(data, function (i, value) {
                                //$ele.append(
                                //$('<option></option>').val(value.Value).text(value.Text));
                                //if (data[i].Text == BinNo) {
                                //    //$ele.attr("selected", "selected");
                                //    $ele.val(BinNo).change();
                                //}
                                //$ele.append($ele);
                                var $option = $("<option></option>",
                                    {
                                        text: value.Text,
                                        value: value.Value
                                    });

                                //if selected_id = id then this is the selected value
                                if (BinNo == value.Value) {  //use == instead of ===
                                    $option.attr("selected", "selected");
                                }
                                $ele.append($option);
                            });
                            return $ele.prop("outerHTML");
                        }

                    })
                }
                else {
                    $.ajax({
                        url: '/Maintenance/RetreiveBinItemLocation',
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify({
                            DrawerNo: DrawerNo,
                            MainNo: MainNo,
                        }),

                        dataType: "json",
                        success: function (data) {
                            $ele.empty();
                            if (data == 0) {
                                $ele.append($('<option></option>').val("").text("No Record"));
                            }
                            else {
                                $ele.append($('<option></option>').val("").text("Select Bin No."));
                            }
                            $.each(data, function (i, value) {
                                //$ele.append(
                                //$('<option></option>').val(value.Value).text(value.Text));
                                //if (data[i].Text == BinNo) {
                                //    //$ele.attr("selected", "selected");
                                //    $ele.val(BinNo).change();
                                //}
                                //$ele.append($ele);
                                var $option = $("<option></option>",
                                    {
                                        text: value.Text,
                                        value: value.Value
                                    });

                                //if selected_id = id then this is the selected value
                                if (BinNo == value.Value) {  //use == instead of ===
                                    $option.attr("selected", "selected");
                                }
                                $ele.append($option);
                            });
                            return $ele.prop("outerHTML");
                        }
                    })
                }

                //$("#ItemLocationTable tbody tr").each(function () { //Loop through the Table rows
                //    var row = $(this);

                    
                //});
            }
        })

        $("body").on('change', '#Maintenance_Group', function () {
            var Group = $("#Maintenance_Group").val();
            var Pullout = $('#Maintenance_Pullout').val();

            var Designationlist = [];
            if (Group == "1") {
                $("#DivDesignation").hide();
                if (Pullout == "1") {
                    $("#ItemLocationShowHide").show();
                }
                else if (Pullout == "2") {
                    $("#ItemLocationShowHide").hide();
                }
                else {
                    $("#ItemLocationShowHide").show();
                }
            }
            else {
                $("#DivDesignation").show();
                $("#ItemLocationShowHide").hide();

                $.ajax({
                    url: '/Maintenance/RetreiveDesignation',
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({
                        Group: Group,
                    }),

                    dataType: "json",
                    success: function (data) {
                        Designationlist = data;
                        var $ele = $("#Maintenance_Designation");
                        $ele.empty();

                        if (Designationlist.length != 0) {
                            $ele.append($('<option/>').val('').text('Select Designation.'));
                            $.each(Designationlist, function (i, val) {
                                $ele.append($('<option/>').val(this['Value']).html(this['Text']));
                            })
                        }
                        else {
                            $ele.append($('<option/>').val('').text('No Record.'));
                        }

                    }

                })
            }
        })

        $("body").on('change', '#Maintenance_Pullout', function () {
            var Pullout = $('#Maintenance_Pullout').val();
            var Group = $("#Maintenance_Group").val();

            if (Pullout == "1") {
                if (Group == "1") {
                    $("#ItemLocationShowHide").show();
                }
                else {
                    $("#ItemLocationShowHide").hide();
                }
            }
            else if (Pullout == "2") {
                $("#ItemLocationShowHide").hide();
            }
        })

        $("#ItemLocationTable").on('change', '#row_MainNo', function () {
            var row = $(this).closest("tr");
            var MainNo = $("#row_MainNo", row).val();
            var DrawerNo = $("#row_DrawerNo", row).val();
            var Drawerlist = [];

            $.ajax({
                url: '/Maintenance/RetreiveDrawerItemLocation',
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify({
                    MainNo: MainNo,
                }),

                dataType: "json",
                success: function (data) {
                    Drawerlist = data;

                    var $ele = $("#row_DrawerNo", row);
                    var BinNo = $("#row_BinNo", row);
                    $ele.empty();

                    if (Drawerlist.length != 0) {
                        $ele.append($('<option/>').val('').text('Select Drawer No.'));
                        $.each(Drawerlist, function (i, val) {
                            $ele.append($('<option/>').val(this['Value']).html(this['Text']));

                        })
                    }
                    else {
                        BinNo.empty();

                        $ele.append($('<option/>').val('').text('No Record.'));
                        BinNo.append($('<option/>').val('').text('No Record.'));

                    }

                }

            })

            var BinNo = $("#row_BinNo", row).val();
            var Binlist = [];

            $.ajax({
                url: '/Maintenance/RetreiveNoDrawerItemLocation',
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify({
                    MainNo: MainNo,
                }),

                dataType: "json",
                success: function (data) {
                    Binlist = data;

                    var $ele = $("#row_BinNo", row);
                    $ele.empty();

                    if (Binlist.length != 0) {
                        $ele.append($('<option/>').val('').text('Select Bin No.'));
                        $.each(Binlist, function (i, val) {
                            $ele.append($('<option/>').val(this['Value']).html(this['Text']));
                        })
                    }
                    else {
                        $ele.append($('<option/>').val('').text('No Record.'));
                    }

                }

            })
        })

        $("#ItemLocationTable").on('change', '#row_DrawerNo', function () {
            var row = $(this).closest("tr");
            var DrawerNo = $("#row_DrawerNo", row).val();
            var MainNo = $("#row_MainNo", row).val();
            var BinNo = $("#row_BinNo", row).val();
            var Binlist = [];

            $.ajax({
                url: '/Maintenance/RetreiveBinItemLocation',
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify({
                    DrawerNo: DrawerNo,
                    MainNo:MainNo,

                }),

                dataType: "json",
                success: function (data) {
                    Binlist = data;

                    var $ele = $("#row_BinNo", row);
                    $ele.empty();

                    if (Binlist.length != 0) {
                        $ele.append($('<option/>').val('').text('Select Bin No.'));
                        $.each(Binlist, function (i, val) {
                            $ele.append($('<option/>').val(this['Value']).html(this['Text']));
                        })
                    }
                    else {
                        $ele.append($('<option/>').val('').text('No Record.'));



                        $.ajax({
                            url: '/Maintenance/RetreiveNoDrawerItemLocation',
                            type: "POST",
                            contentType: "application/json",
                            data: JSON.stringify({
                                MainNo: MainNo,
                            }),

                            dataType: "json",
                            success: function (data) {
                                Binlist = data;

                                var $ele = $("#row_BinNo", row);
                                $ele.empty();

                                if (Binlist.length != 0) {
                                    $ele.append($('<option/>').val('').text('Select Bin No.'));
                                    $.each(Binlist, function (i, val) {
                                        $ele.append($('<option/>').val(this['Value']).html(this['Text']));
                                    })
                                }
                                else {
                                    $ele.append($('<option/>').val('').text('No Record.'));
                                }

                            }

                        })
                    }

                }

            })
        })
    </script>

    <script>
        var $newRow;
        $("#ItemLocationTable").on('click', "#tbnadd", function () {
            var row = $(this).closest('tr');
            var MainNo = $("#row_MainNo").val().trim()

            if (MainNo == null || MainNo == "") {

                $.toast({
                    heading: "Error",
                    text: "Please, Select Item Location.",
                    showHideTransition: 'slide',
                    icon: 'error',
                    autoHideDelay: 3000,

                    position: 'top-right',
                    bgColor: '#FF4859'

                });

                return false;
            }

            $("select#row_MainNo").select2("destroy");
            $("select#row_BinNo").select2("destroy");
            $("select#row_DrawerNo").select2("destroy");

            $newRow = $('#ItemLocationBody').clone(true).appendTo($("#ItemLocationTable")); // CLONE MAINROW UNDER TABLE ID
            var main = $('#row_MainNo',row).val();
            var draw = $('#row_HiddenDrawer',row).val();
            var bin = $('#row_HiddenBin',row).val();

            AddPopulateDrawerItemLocation(row);

            $('#row_MainNo', $newRow).val(main);// GET VALUE OF DROPDOWNLIST (THIS CODE IS FOR DROPDOWNLIST ONLY)
            //$('#row_DrawerNo', $newRow).val(draw);// GET VALUE OF DROPDOWNLIST (THIS CODE IS FOR DROPDOWNLIST ONLY)
            //$('#row_BinNo', $newRow).val(bin);// GET VALUE OF DROPDOWNLIST (THIS CODE IS FOR DROPDOWNLIST ONLY)

            $('#row_MainNo,#row_DrawerNo,#row_BinNo', $newRow);


            //$('#row_MainNo').val("")

            //$('#row_BinNo').empty();
            //$('#row_DrawerNo').empty();
            //$('#row_BinNo').append($('<option/>').val('').text('No Record.'));
            //$('#row_DrawerNo').append($('<option/>').val('').text('No Record.'));

            $('select#row_MainNo').select2(); // SET AGAIN SELECT2 JAVASCRIPT TO DROPDOWNLIST
            $('select#row_DrawerNo').select2(); // SET AGAIN SELECT2 JAVASCRIPT TO DROPDOWNLIST
            $('select#row_BinNo').select2(); // SET AGAIN SELECT2 JAVASCRIPT TO DROPDOWNLIST
        });

        function AddPopulateDrawerItemLocation(event) {

            var MainNo = $("#row_MainNo", event).val();
            var Drawer = $("#row_DrawerNo", event).val();
            var $ele = $("#row_DrawerNo", $newRow);

            $.ajax({
                url: '/Maintenance/RetreiveDrawerItemLocation',
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify({
                    MainNo: MainNo,
                }),

                dataType: "json",
                success: function (data) {

                    $ele.empty();
                    $ele.append($('<option></option>').val("").text("Select Drawer No."));
                    $.each(data, function (i, value) {
                        $ele.append(
                            $('<option></option>').val(value.Value).text(value.Text));
                    });
                    //$ele.val(Drawer).change();
                    $('#row_DrawerNo', $newRow).val(Drawer);// GET VALUE OF DROPDOWNLIST (THIS CODE IS FOR DROPDOWNLIST ONLY)

                    AddPopulateBinItemLocation(event);
                }
            })
        }

        function AddPopulateBinItemLocation(event) {

            var DrawerNo = $("#row_DrawerNo", event).val();
            var BinNo = $("#row_BinNo", event).val();
            var MainNo = $("#row_MainNo", event).val();

            if (DrawerNo == "") {
                $.ajax({
                    url: '/Maintenance/RetreiveNoDrawerItemLocation',
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({
                        MainNo: MainNo,
                    }),

                    dataType: "json",
                    success: function (data) {

                        var $ele = $("#row_BinNo", $newRow);
                        $ele.empty();
                        $ele.append($('<option></option>').val("").text("Select Bin No."));
                        $.each(data, function (i, value) {
                            $ele.append(
                                $('<option></option>').val(value.Value).text(value.Text));
                        });
                        //$ele.val(BinNo).change();
                        $('#row_BinNo', $newRow).val(BinNo);// GET VALUE OF DROPDOWNLIST (THIS CODE IS FOR DROPDOWNLIST ONLY)
                    }

                })
            }
            else {
                $.ajax({
                    url: '/Maintenance/RetreiveBinItemLocation',
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({
                        DrawerNo: DrawerNo,
                        MainNo: MainNo,
                    }),

                    dataType: "json",
                    success: function (data) {
                        var $ele = $("#row_BinNo", $newRow);
                        $ele.empty();
                        $ele.append($('<option></option>').val("").text("Select Bin No."));
                        $.each(data, function (i, value) {
                            $ele.append(
                                $('<option></option>').val(value.Value).text(value.Text));
                        });
                        //$ele.val(BinNo).change();
                        $('#row_BinNo', $newRow).val(BinNo);// GET VALUE OF DROPDOWNLIST (THIS CODE IS FOR DROPDOWNLIST ONLY)
                    }
                })
            }
        }

        //remove button click event
        $('#ItemLocationTable').on('click', '#btndelete', function () {

            var count = $('#ItemLocationTable tbody tr').length;

            if (count > 1) {
                $(this).closest("tr").remove();
            } else {

                $.toast({
                    heading: "Error",
                    text: "Sorry. Row can't be empty.",
                    showHideTransition: 'slide',
                    icon: 'error',
                    autoHideDelay: 3000,

                    position: 'top-right',
                    bgColor: '#FF4859'

                });
                //alert("File Shouldn't Be Empty!!");
                return false;

            }
        });

        $(".ItemMasterform").submit(function (event) {
            var validate = 0;

            var OldStockNo = $("#Maintenance_OldStockNo").val().trim()
            var StockNo = $("#Maintenance_StockNo").val().trim()
            var ItemName = $("#Maintenance_ItemName").val().trim()
            var ItemDescription = $("#Maintenance_ItemDescription").val().trim()
            var Specification = $("#Maintenance_Specification").val().trim()
            var Details = $("#Maintenance_Details").val().trim()
            var Unit = $("#Maintenance_Unit").val().trim()
            var StockOnHand = $("#Maintenance_StockOnHand").val().trim()
            var SafetyStock = $("#Maintenance_SafetyStock").val().trim()
            var Group = $("#Maintenance_Group").val()
            var Designation = $("#Maintenance_Designation").val()
            var Status = $('#Maintenance_Status').val();
            var Pullout = $('#Maintenance_Pullout').val();
            if (Status == "1") {
                Pullout = "1"
            }
            var TypeID = "";
            if (Group == "1") {
                TypeID = "1"
                Designation = '8';
            }
            else {
                TypeID = "2"

            }
            var CriticalOrder = $("#Maintenance_CriticalOrder").val().trim()


            if (StockNo == "" || ItemName == "" || CriticalOrder == "" || Specification == "" || Unit == "" || StockOnHand == "" || SafetyStock == "" || Group == "" || Designation == "") { return false; }

            if (SafetyStock <= 0 || CriticalOrder <= 0) {
                validate++;
                $.toast({
                    heading: "Invalid",
                    text: "0 is not allowed.",
                    showHideTransition: 'slide',
                    icon: 'error',
                    autoHideDelay: 3000,

                    position: 'top-right',
                    bgColor: '#FF4859'
                });
                return false;
            }

            if (parseFloat(SafetyStock) < parseFloat(CriticalOrder)) {
                validate++;
                $.toast({
                    heading: "Warning.",
                    text: "Safety Stock cannot be less than Critical Order.",
                    showHideTransition: 'slide',
                    autoHideDelay: 3000,
                    icon: 'error',
                    position: 'top-right',
                    bgColor: '#FF4859'
                });
                return false;
            }


            event.preventDefault();
            event.stopImmediatePropagation();

            var ItemLocationList = new Array();
            var ValidateList = new Array();
            if (Group == '1') {
                if (Pullout == '1') {
                    $("#ItemLocationTable tbody tr").each(function () { //Loop through the Table rows
                        var row = $(this);

                        var MainNo = $("#row_MainNo", row).val();

                        if (Group == '1') {
                            if (MainNo == "" || MainNo == null) {
                                validate++;
                                $.toast({
                                    heading: "Error",
                                    text: "Please, Select Item Location.",
                                    showHideTransition: 'slide',
                                    icon: 'error',
                                    autoHideDelay: 3000,

                                    position: 'top-right',
                                    bgColor: '#FF4859'

                                });

                                return false;
                            }
                        }

                        var Location = {}; // SET DATA ARRAY TO STORED ALL DATA INSIDE OF TABLE

                        //if ($("#row_MainNo", row).val() == '') {
                        //    Location.MainNo = Designation;
                        //}
                        //else {
                        //    Location.MainNo = $("#row_MainNo", row).val();
                        //}
                        Location.MainNo = MainNo;
                        Location.BinNo = $("#row_BinNo", row).val();
                        Location.DrawerNo = $("#row_DrawerNo", row).val();

                        ItemLocationList.push(Location); // RENDER DATA ARRAY TO JSON ARRAY
                        ValidateList.push(Location); // RENDER DATA ARRAY TO JSON ARRAY

                    });
                }
                else {
                    var Location = {}; // SET DATA ARRAY TO STORED ALL DATA INSIDE OF TABLE
                    Location.MainNo = '';
                    Location.BinNo = '';
                    Location.DrawerNo = '';
                    ItemLocationList.push(Location); // RENDER DATA ARRAY TO JSON ARRAY
                }
            }
            else if (Group == '2') {
                var Location = {}; // SET DATA ARRAY TO STORED ALL DATA INSIDE OF TABLE
                Location.MainNo = '';
                Location.BinNo = '';
                Location.DrawerNo = '';
                ItemLocationList.push(Location); // RENDER DATA ARRAY TO JSON ARRAY
            }

            if (validate > 0) {
                return false;
            }

            var MainNo = "";
            var MainNo0 = "";
            var DrawerNo = "";
            var DrawerNo0 = "";
            var BinNo = "";
            var BinNo0 = "";
            var main = "";

            //ItemLocationList.sort(function (a, b) { return a.MainNo - b.MainNo });

            for (var i = 0; i < ItemLocationList.length; i++) {

                MainNo = ItemLocationList[i].MainNo;
                DrawerNo = ItemLocationList[i].DrawerNo;
                BinNo = ItemLocationList[i].BinNo;

                ValidateList.splice(0, 1);

                for (var j = 0; j < ValidateList.length; j++) {
                    MainNo0 = ValidateList[j].MainNo;
                    DrawerNo0 = ValidateList[j].DrawerNo;
                    BinNo0 = ValidateList[j].BinNo;
                    if (DrawerNo == DrawerNo0 && MainNo == MainNo0 && BinNo == BinNo0) {
                        validate = 'duplicate';
                    }
                }
            }

            if (validate == 'duplicate') {
                $.toast({
                    heading: "Error",
                    text: "Same item location is not allowed",
                    showHideTransition: 'slide',
                    icon: 'error',
                    autoHideDelay: 3000,

                    position: 'top-right',
                    bgColor: '#FF4859'

                });

                return false;
            }
            var action = $(".ItemMasterform").attr("action");

            bootbox.confirm({
                title: "Are you sure you want to Update?",
                //message: "This Item will be updated in Item Inventory and affect the report.",
                message: "Item Inventory will be updated.",
                size: "small",
                buttons: {
                    confirm: {
                        label: 'Yes',
                        className: 'btn-success'
                    },
                    cancel: {
                        label: 'No',
                        className: 'btn-danger'
                    }
                },
                callback: function (result) {

                    if (result) {
                        $.ajax({
                            url: action,
                            type: "POST",
                            contentType: "application/json",
                            data: JSON.stringify({
                                ItemLocationList,
                                OldStockNo: OldStockNo,
                                StockNo: StockNo,
                                ItemName: ItemName,
                                ItemDescription: ItemDescription,
                                Specification: Specification,
                                Details: Details,
                                Unit: Unit,
                                StockOnHand: StockOnHand,
                                SafetyStock: SafetyStock,
                                Group: Group,
                                Designation: Designation,
                                TypeID: TypeID,
                                CriticalOrder: CriticalOrder,
                                Status: Status,
                                Pullout: Pullout,
                            }),
                            dataType: "json",
                            success: function (data) {
                                if (data == 0) {
                                    $.toast({
                                        heading: "System Error",
                                        text: "Please contact our administrator for assistance.",
                                        showHideTransition: 'slide',
                                        autoHideDelay: 3000,
                                        icon: 'error',
                                        position: 'top-right',
                                        bgColor: '#FF4859'
                                    });
                                    return false;
                                }
                                else if(data == "StockInvalid")
                                {
                                    $.toast({
                                        heading: "Error",
                                        text: StockNo + " Already exists",
                                        showHideTransition: 'slide',
                                        icon: 'error',
                                        autoHideDelay: 3000,

                                        position: 'top-right',
                                        bgColor: '#FF4859'
                                    });
                                    return false;
                                }
                                else if (data == "Duplicated") {
                                    $.toast({
                                        heading: "Error",
                                        text: "Specification and Description is already exists.",
                                        showHideTransition: 'slide',
                                        icon: 'error',
                                        autoHideDelay: 3000,

                                        position: 'top-right',
                                        bgColor: '#FF4859'
                                    });
                                    return false;
                                }
                                else if (data == "Exist") {
                                    $.toast({
                                        heading: "Error",
                                        text: "This item is in use, deactivation is not allowed.",
                                        showHideTransition: 'slide',
                                        icon: 'error',
                                        autoHideDelay: 3000,

                                        position: 'top-right',
                                        bgColor: '#FF4859'

                                    });
                                    setTimeout(function () {
                                        window.location.reload();
                                    }, 3000);
                                }
                                else {
                                    $.toast({
                                        heading: 'Item Management.',
                                        text: "Item Code " + OldStockNo + " Successfully edited.",
                                        showHideTransition: 'slide',
                                        icon: 'success',
                                        autoHideDelay: 3000,

                                        position: 'top-right',
                                        bgColor: '#7EC857'
                                    });

                                    var $this = $("#btnSave");
                                    $this.button('loading');
                                    setTimeout(function () {
                                        $this.button('reset');
                                        window.location.href = "/Maintenance/ItemManagement/table";
                                    }, 2000);
                                }

                            }
                        });

                    }

                    else {
                        return;
                    }
                }
            })




        })

        $("#Maintenance_Status").on("change", function () {
            var StockNo = $("#Maintenance_StockNo").val()
            var Status = $("#Maintenance_Status").val()
            var Status2 = $("#Maintenance_Status option:selected").html()
            var Group = $("#Maintenance_Group").val();
            var Pullout = $('#Maintenance_Pullout').val();

            if (Status == "1") {
                if (Group == "1") {
                    $('#ShowhideSpan').hide();
                    $('#Maintenance_Pullout').hide();
                    $("#ItemLocationShowHide").show();
                    $('#Maintenance_Pullout').val('1');
                }
                else {
                    $('#ShowhideSpan').hide();
                    $('#Maintenance_Pullout').hide();
                    $("#ItemLocationShowHide").hide();
                    $('#Maintenance_Pullout').val('1');
                }
            }
            else if (Status == "2") {
                $('#ShowhideSpan').show();
                $('#Maintenance_Pullout').show();

                $.ajax({
                    url: '/Maintenance/RetreivePullout',
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({
                    }),

                    dataType: "json",
                    success: function (data) {
                        var $ele = $("#Maintenance_Pullout");
                        $ele.empty();
                        $.each(data, function (i, val) {
                            $ele.append($('<option/>').val(this['Value']).html(this['Text']));
                        })
                    }
                })
                if (Pullout == "1") {
                    if (Group == "1") {
                        $("#ItemLocationShowHide").show();
                    }
                    else {
                        $("#ItemLocationShowHide").hide();
                    }
                }
                else if (Pullout == "2") {
                    $("#ItemLocationShowHide").hide();
                }
            }

            //bootbox.confirm({
            //    title: "Are you sure?",
            //    message: "Item status will be change into " + Status2 + ".",
            //    size: "small",
            //    buttons: {
            //        confirm: {
            //            label: 'Yes',
            //            className: 'btn-success'
            //        },
            //        cancel: {
            //            label: 'No',
            //            className: 'btn-danger'
            //        }
            //    },
            //    callback: function (result) {

            //        if (result) {
            //            $.ajax({
            //                url: "/Maintenance/UpdateItemMasterStatus/",
            //                type: "POST",
            //                contentType: "application/json",
            //                data: JSON.stringify({
            //                    StockNo: StockNo,
            //                    Status: Status,
            //                }),
            //                dataType: "json",
            //                success: function (result) {

            //                    if (result == 0) {
            //                        $.toast({
            //                            heading: "System Error",
            //                            text: "Contact our adminstrator for assistance",
            //                            showHideTransition: 'slide',
            //                            icon: 'error',
            //                            autoHideDelay: 3000,

            //                            position: 'top-right',
            //                            bgColor: '#FF4859'
            //                        });
            //                    }
            //                    else if (result == "Exist") {
            //                        $.toast({
            //                            heading: "System Error",
            //                            text: "This item is in use, deactivation is not allowed.",
            //                            showHideTransition: 'slide',
            //                            icon: 'error',
            //                            autoHideDelay: 3000,

            //                            position: 'top-right',
            //                            bgColor: '#FF4859'

            //                        });
            //                        setTimeout(function () {
            //                            window.location.reload();
            //                        }, 3000);
            //                    }
            //                    else {
            //                        if (Status == "2") {
            //                            $('#DivPullout').show();

            //                            $.ajax({
            //                                url: '/Maintenance/RetreivePullout',
            //                                type: "POST",
            //                                contentType: "application/json",
            //                                data: JSON.stringify({
            //                                    MainNo: MainNo,
            //                                }),

            //                                dataType: "json",
            //                                success: function (data) {
            //                                    var $ele = $("#Maintenance_Pullout", row);
            //                                    $ele.empty();
            //                                    $.each(data, function (i, val) {
            //                                        $ele.append($('<option/>').val(this['Value']).html(this['Text']));
            //                                    })
            //                                }
            //                            })
            //                        }
            //                        $.toast({
            //                            heading: "Account Status",
            //                            text: StockNo + " status is now "+Status2+"D.",
            //                            showHideTransition: 'slide',
            //                            icon: 'success',
            //                            autoHideDelay: 3000,

            //                            position: 'top-right',
            //                            bgColor: '#7EC857'
            //                        });
            //                    }

            //                }
            //            });
            //        }

            //        //else {
            //        //    window.location.reload();
            //        //    return;
            //        //}
            //    }
            //})
        })

    </script>
}

