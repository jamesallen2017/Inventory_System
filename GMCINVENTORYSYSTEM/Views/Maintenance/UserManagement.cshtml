@model GMCINVENTORYSYSTEM.Models.AllModels

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    List<SelectListItem>
        MainList = new List<SelectListItem>();

    MainList.Add(new SelectListItem
    {

        Text = "No Record",
        Value = ""
    });
}

<style>
    td {
        word-break: break-word;
    }

    .table > thead > tr > th, .table > thead > tr > td {
        vertical-align: bottom;
    }
</style>

<title>User Management</title>

<div class="page-header">
    <h1>User Management</h1>
    <ol class="breadcrumb">
        <li><a href="#">Maintenance</a></li>
        <li class="active">User Management</li>
    </ol>
</div>

<div class="content-wrap">
    <!--START: Content Wrap-->
    @if (ViewBag.MaintenanceContent == "table")
    {
        <div class="panel panel-default">
            <div class="panel-heading">
                <span>Date: @DateTime.Now.ToShortDateString()</span>
            </div>
            <div class="row">
                <div class="col-md-12">

                    <div class="panel-body">
                        <table class="table table-striped table-hover" id="UserList">
                            <thead>
                                <tr>
                                    <th>Edit</th>
                                    <th class="col-md-1">Company ID</th>
                                    <th class="col-md-3 hidden-xs">Full Name</th>
                                    <th class="col-md-3 hidden-sm">Email Address</th>
                                    <th class="col-md-1 hidden-sm">Department</th>
                                    <th class="col-md-1">Group</th>
                                    <th class="col-md-1">Designation</th>
                                    <th class="col-md-2 hidden-xs">Status</th>
                                    <th style="display:none;"></th>
                                </tr>
                            </thead>
                            <tbody>

                                @foreach (var row in Model.Maintenance.dtUserInformation)
                                {
                                    <tr>
                                        <td><a href="@Url.Action("UserManagement", "Maintenance", new { @id = "edit", @UserID = row.UserID })" class="btn btn-default"><span class="di di-edit"></span></a></td>
                                        <td>@Html.DisplayFor(modelitem => row.CompanyID)</td>
                                        <td>@Html.DisplayFor(modelitem => row.Fullname).ToString().ToUpper()</td>
                                        <td>@Html.DisplayFor(modelitem => row.EmailAddress)</td>
                                        <td>@Html.DisplayFor(modelitem => row.DepartmentID).ToString().ToUpper()</td>
                                        <td>@Html.DisplayFor(modelitem => row.GroupID).ToString().ToUpper()</td>
                                        <td>@Html.DisplayFor(modelitem => row.DesignationID).ToString().ToUpper()</td>
                                        <td class="hidden-xs">
                                            @Html.DropDownListFor(modelitem => row.Status, new SelectList(Model.Maintenance.StatusList, "Value", "Text", row.Status)
                                            , new { @class = "form-control select2Search", @style = "border-radius: 0; width: 100%;" })
                                        </td>
                                        <td style="display:none;">
                                            @Html.HiddenFor(modelitem => row.Fullname)
                                            @Html.HiddenFor(modelitem => row.CompanyID)
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <div class="panel-footer">
                        <div class="row">
                            <div class="pull-right" style="margin-right:10px">
                                <a href="@Url.Action("UserManagement", "Maintenance", new { @id = "create" })" class="btn btn-primary">Add User</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    }
    else if (ViewBag.MaintenanceContent == "create")
    {
        using (Html.BeginForm("UserManagement", "Maintenance", FormMethod.Post, new { @id = "formvalidationtooltip", @class = "CreatedForm", role = "form" }))
        {
            <div class="panel panel-default">
                <div class="panel-heading">
                    <span>Date: @DateTime.Now.ToShortDateString()</span>
                </div>
                <div class="row">
                    <div class="col-md-12">

                        <div class="panel-body">
                            <div class="col-md-6">

                                <div class="form-group input-group">
                                    <span class="input-group-addon">Company ID</span>
                                    @Html.TextBoxFor(maintenance => maintenance.Maintenance.CompanyID, new { @class = "form-control validate[required]", @placeholder = "Company ID", @autocomplete = "off" })
                                </div>

                                <div class="form-group input-group">
                                    <span class="input-group-addon">Username</span>
                                    @Html.TextBoxFor(maintenance => maintenance.Maintenance.Username, new { @class = "form-control validate[required]", @placeholder = "Username", @autocomplete = "off" })
                                </div>

                                <div class="form-group input-group">
                                    <span class="input-group-addon">User Role</span>
                                    @Html.DropDownListFor(maintenance => maintenance.Maintenance.RoleID, Model.Maintenance.ddlUserRole, "Select User Role", new { @class = "form-control validate[required]" })
                                </div>
                                <div class="form-group input-group">
                                    <span class="input-group-addon">Group</span>
                                    @Html.DropDownListFor(maintenance => maintenance.Maintenance.GroupID, Model.Maintenance.ddlGroup, "Select User Group", new { @class = "form-control validate[required]" })
                                </div>


                            </div>

                            <div class="col-md-6">
                                <div class="form-group input-group">
                                    <span class="input-group-addon">Full Name</span>
                                    @Html.TextBoxFor(maintenance => maintenance.Maintenance.Fullname, new { @class = "form-control validate[required]", @placeholder = "Full Name", @autocomplete = "off" })
                                </div>
                                <div class="form-group input-group">
                                    <span class="input-group-addon">Email Address</span>
                                    @Html.TextBoxFor(maintenance => maintenance.Maintenance.EmailAddress, new { @class = "form-control validate[required]", @placeholder = "Email Address", @autocomplete = "off" })
                                </div>

                                <div class="form-group input-group">
                                    <span class="input-group-addon">Department</span>
                                    @Html.DropDownListFor(maintenance => maintenance.Maintenance.Department, Model.Maintenance.ddlDeparment, "Select Department", new { @class = "form-control validate[required]" })
                                </div>

                                <div class="form-group input-group">
                                    <span class="input-group-addon">Designation</span>
                                    @Html.DropDownListFor(maintenance => maintenance.Maintenance.DesignationID, MainList, new { @class = "form-control validate[required]" })
                                </div>
                            </div>
                        </div>

                        <div class="panel-footer">
                            <div class="row">
                                <div class="pull-right" style="margin-right:10px">
                                    <a class="btn btn-danger" id="btnBack" href="@Url.Action("UserManagement", "Maintenance", new { @id = "table" })">Back</a>
                                    <input type="submit" id="btnSave" class="btn btn-primary" value="Save">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }

    else if (ViewBag.MaintenanceContent == "edit")
    {
        using (Html.BeginForm("UserManagement", "Maintenance", FormMethod.Post, new { @id = "formvalidationtooltip", @class = "UpdatedForm", role = "form" }))
        {
            <div class="panel panel-default">
                <div class="panel-heading">
                    <div class="row">
                        <div class="col-md-6">
                            <span>Date: @DateTime.Now.ToShortDateString()</span>
                        </div>
                        <div class="col-md-6">
                            @if (Model.Maintenance.ResetPassword == 1)
                            {
                                <span>Reset Code : <span style="color:green"> @Html.DisplayFor(maintenance => maintenance.Maintenance.Code)</span></span>
                            }
                            else
                            {
                                if (Model.Maintenance.Code != "")
                                {
                                    <span>Reset Code : <span style="color:red"> @Html.DisplayFor(maintenance => maintenance.Maintenance.Code)</span></span>
                                }
                            }
                        </div>
                    </div>
                </div>

                @Html.HiddenFor(maintenance => maintenance.Maintenance.UserID, new { @id = "UserID" })

                <div class="row">
                    <div class="col-md-12">

                        <div class="panel-body">
                            <div class="col-md-6">

                                <div class="form-group input-group">
                                    <span class="input-group-addon">Company ID</span>
                                    @Html.TextBoxFor(maintenance => maintenance.Maintenance.CompanyID, new { @class = "form-control validate[required]", @placeholder = "Company ID No", @autocomplete = "off" })
                                </div>



                                <div class="form-group input-group">
                                    <span class="input-group-addon">Username</span>
                                    @Html.TextBoxFor(maintenance => maintenance.Maintenance.Username, new { @class = "form-control validate[required]", @placeholder = "Username", @autocomplete = "off" , @disabled = "disabled"})
                                </div>

                                <div class="form-group input-group">
                                    <span class="input-group-addon">User Role</span>
                                    @Html.DropDownListFor(maintenance => maintenance.Maintenance.RoleID, Model.Maintenance.ddlUserRole, "Select User Role", new { @class = "form-control validate[required]" })
                                </div>


                                <div class="form-group input-group">
                                    <span class="input-group-addon">Group</span>
                                    @Html.DropDownListFor(maintenance => maintenance.Maintenance.GroupID, Model.Maintenance.ddlGroup, "Select User Group", new { @class = "form-control validate[required]" })
                                </div>


                            </div>

                            <div class="col-md-6">
                                <div class="form-group input-group">
                                    <span class="input-group-addon">Full Name</span>
                                    @Html.TextBoxFor(maintenance => maintenance.Maintenance.Fullname, new { @class = "form-control validate[required]", @placeholder = "Fullname", @autocomplete = "off", @disabled = "disabled" })
                                </div>

                                <div class="form-group input-group">
                                    <span class="input-group-addon">Email Address</span>
                                    @Html.TextBoxFor(maintenance => maintenance.Maintenance.EmailAddress, new { @class = "form-control validate[required]", @placeholder = "Email Address", @autocomplete = "off"})
                                </div>

                                <div class="form-group input-group">
                                    <span class="input-group-addon">Department</span>
                                    @Html.DropDownListFor(maintenance => maintenance.Maintenance.Department, Model.Maintenance.ddlDeparment, "Select Department", new { @class = "form-control validate[required]" })
                                </div>

                                <div class="form-group input-group">
                                    <span class="input-group-addon">Designation</span>
                                    @Html.DropDownListFor(maintenance => maintenance.Maintenance.DesignationID, Model.Maintenance.ddlDesignation, "Select Designation", new { @class = "form-control validate[required]" })
                                </div>
                            </div>
                        </div>

                        <div class="panel-footer">
                            <div class="row">
                                <div class="pull-right" style="margin-right:10px">
                                    <a class="btn btn-warning" id="reset">Reset Password</a>
                                    <a class="btn btn-danger" id="btnBack" href="@Url.Action("UserManagement", "Maintenance", new { @id = "table" })">Back</a>
                                    <input type="submit" value="Update" id="btnUpdate" class="btn btn-primary" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
</div>


@section scripts
{


<script>
    $(function () {
        $('#UserList').DataTable({
            order: [[2, "asc"]],
            lengthMenu: [[5, 10, 15, 20, 50, -1], [5, 10, 15, 20, 50, "All"]],
            //dom: "<'row'<'col-md-3'l><'col-md-3'f>>" + //set column size
            //     "<'row'<'col-md-12'tr>>" +
            //     "<'row'<'col-md-5'i><'col-md-7'p>>",
        }).rows().iterator('row', function (context, index) {
            var node = $(this.row(index).node());
            //node.context is element of tr generated by jQuery DataTables.
        });
    })
</script>

    <script>
        $("body").on('change', '#Maintenance_GroupID', function () {
            var Group = $("#Maintenance_GroupID").val();

            var Designationlist = [];

            $.ajax({
                url: '/Maintenance/RetreiveDesignation',
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify({
                    Group: Group,
                }),

                dataType: "json",
                success: function (data) {
                    Designationlist = data;
                    var $ele = $("#Maintenance_DesignationID");
                    $ele.empty();

                    if (Group == '1') {
                        if (Designationlist.length != 0) {
                            $ele.append($('<option/>').val('').text('Select Designation.'));
                            $.each(Designationlist, function (i, value) {
                                var $option = $("<option></option>",
                                    {
                                        text: value.Text,
                                        value: value.Value
                                    });

                                //if selected_id = id then this is the selected value
                                if (value.Value == '8') {  //use == instead of ===
                                    $option.attr("selected", "selected");
                                }
                                $ele.append($option);
                            });
                            return $ele.prop("outerHTML");
                        }
                        else {
                            $ele.append($('<option/>').val('').text('No Record.'));
                        }
                    }
                    else {
                        if (Designationlist.length != 0) {
                            $ele.append($('<option/>').val('').text('Select Designation.'));
                            $.each(Designationlist, function (i, val) {
                                $ele.append($('<option/>').val(this['Value']).html(this['Text']));
                            })
                        }
                        else {
                            $ele.append($('<option/>').val('').text('No Record.'));
                        }
                    }
                }

            })
        })

        $("#UserList").on("change", "#row_Status", function () {
            var row = $(this).closest("tr");

            var CompanyID = $("#row_CompanyID", row).val()
            var Fullname = $("#row_Fullname", row).val()
            var Status = $("#row_Status", row).val()
            var Status2 = $("#row_Status option:selected", row).html()


            bootbox.confirm({
                title: "Change Account Status?",
                message: "Account will be change into " + Status2 + ".",
                size: "small",
                buttons: {
                    confirm: {
                        label: 'Yes',
                        className: 'btn-success'
                    },
                    cancel: {
                        label: 'No',
                        className: 'btn-danger'
                    }
                },
                callback: function (result) {

                    if (result) {
                        $.ajax({
                            url: "/Maintenance/UpdateUserStatus/",
                            type: "POST",
                            contentType: "application/json",
                            data: JSON.stringify({
                                CompanyID: CompanyID,
                                Status: Status,
                            }),
                            dataType: "json",
                            success: function (result) {

                                if (result == 0) {
                                    $.toast({
                                        heading: "System Error",
                                        text: "Contact our adminstrator for assistance",
                                        showHideTransition: 'slide',
                                        icon: 'error',
                                        autoHideDelay: 3000,

                                        position: 'top-right',
                                        bgColor: '#FF4859'
                                    });
                                }
                                else {
                                    $.toast({
                                        heading: "User Management",
                                        text: Fullname + " is now " + Status2 + "D.",
                                        showHideTransition: 'slide',
                                        icon: 'success',
                                        autoHideDelay: 3000,

                                        position: 'top-right',
                                        bgColor: '#7EC857'
                                    });
                                }

                            }
                        });
                    }

                    else {
                        window.location.reload();
                        return;
                    }
                }
            })



        })

    </script>


    <script>


        $("#formvalidationtooltip").on("click", "#reset", function (event) {
            event.preventDefault();
            event.stopImmediatePropagation();

            var UserID = $("#UserID").val();
            var Fullname = $("#Maintenance_Fullname").val()

            bootbox.confirm({
                title: "Are you sure you want to reset password?",
                message: "The password will be reset.",
                size: "small",
                buttons: {
                    confirm: {
                        label: 'Yes',
                        className: 'btn-success'
                    },
                    cancel: {
                        label: 'No',
                        className: 'btn-danger'
                    }
                },
                callback: function (result) {

                    if (result) {

                        $.ajax({
                            url: "/Maintenance/ResetPassword/",
                            type: "POST",
                            datatype: 'json',
                            contentType: 'application/json',
                            data: JSON.stringify({
                                UserID: UserID,
                            }),
                            success: function (result) {
                                if (result == "") {
                                    $.toast({
                                        heading: "System Error",
                                        text: "Contact our adminstrator for assistance",
                                        showHideTransition: 'slide',
                                        icon: 'success',
                                        autoHideDelay: 3000,

                                        position: 'top-right',
                                        bgColor: '#FF4859'
                                    });
                                }
                                else {
                                    $.toast({
                                        heading: "User Management",
                                        text: Fullname + " successfully reset.",
                                        showHideTransition: 'slide',
                                        icon: 'success',
                                        autoHideDelay: 3000,
                                        position: 'top-right',
                                        bgColor: '#7EC857'
                                    });

                                    var $this = $("#reset");
                                    $this.button('loading');
                                    setTimeout(function () {
                                        $this.button('reset');
                                        window.location.href = "/Maintenance/UserManagement/edit?UserID=" + UserID;
                                    }, 3000);
                                }
                            },
                        });
                    }

                    else {
                        return;
                    }
                }
            })
        })



        $(".UpdatedForm").submit("#btnUpdate", function (event) {
            var UserID = $("#UserID").val()
            var CompanyID = $("#Maintenance_CompanyID").val()
            var Fullname = $("#Maintenance_Fullname").val()
            var Username = $("#Maintenance_Username").val()
            var EmailAddress = $("#Maintenance_EmailAddress").val()
            var RoleID = $("#Maintenance_RoleID").val()
            var GroupID = $("#Maintenance_GroupID").val()
            var DepartmentID = $("#Maintenance_Department").val()
            var DesignationID = $("#Maintenance_DesignationID").val()
            var emailReg = /^([\w-\.]+@@([\w-]+\.)+[\w-]{2,4})?$/;

            if (CompanyID == "" || Fullname == "" || Username == "" || EmailAddress == "" ||
                RoleID == "" || GroupID == "" || DepartmentID == "" || DesignationID == "") {
                return false;
            }
            if (!emailReg.test(EmailAddress)) {
                $.toast({
                    heading: "Invalid Format",
                    text: "Please, Check your Email Address.",
                    showHideTransition: 'slide',
                    autoHideDelay: 3000,
                    icon: 'error',
                    position: 'top-right',
                    bgColor: '#FF4859'
                });
                return false;
            }

            event.preventDefault();
            event.stopImmediatePropagation();

            var action = $("#formvalidationtooltip").attr("action");
            bootbox.confirm({
                title: "Are you sure you want to update?",
                message: "This will affect all the created transaction.",
                size: "small",
                buttons: {
                    confirm: {
                        label: 'Yes',
                        className: 'btn-success'
                    },
                    cancel: {
                        label: 'No',
                        className: 'btn-danger'
                    }
                },
                callback: function (result) {

                    if (result) {

                        $.ajax({
                            url: action,
                            type: "POST",
                            contentType: "application/json",
                            data: JSON.stringify({
                                UserID: UserID,
                                CompanyID: CompanyID,
                                Fullname: Fullname,
                                Username: Username,
                                EmailAddress: EmailAddress,
                                RoleID: RoleID,
                                GroupID: GroupID,
                                DepartmentID: DepartmentID,
                                DesignationID: DesignationID,
                            }),
                            dataType: "json",
                            success: function (data) {
                                if (data == 0) {
                                    $.toast({
                                        heading: "System Error",
                                        text: "Please contact our administrator for assistance.",
                                        showHideTransition: 'slide',
                                        icon: 'error',
                                        autoHideDelay: 3000,

                                        position: 'top-right',
                                        bgColor: '#FF4859'
                                    });
                                    return false;
                                }
                                else {
                                    $.toast({
                                        heading: "User Management",
                                        text: Fullname + " successfully Updated",
                                        showHideTransition: 'slide',
                                        icon: 'success',
                                        autoHideDelay: 3000,

                                        position: 'top-right',
                                        bgColor: '#7EC857'
                                    });

                                    $("#reset").hide();
                                    $("#btnBack").hide();
                                    var $this = $("#btnUpdate");
                                    $this.button('loading');
                                    setTimeout(function () {
                                        $this.button('reset');
                                        window.location.href = "/Maintenance/UserManagement/table";
                                    }, 3000);
                                }
                            }
                        });

                    }

                    else {
                        return;
                    }
                }
            })

        })



        $(".CreatedForm").submit("#btnSave", function (event) {

            var CompanyID = $("#Maintenance_CompanyID").val()
            var Fullname = $("#Maintenance_Fullname").val()
            var Username = $("#Maintenance_Username").val().trim()
            var EmailAddress = $("#Maintenance_EmailAddress").val()
            var RoleID = $("#Maintenance_RoleID").val()
            var GroupID = $("#Maintenance_GroupID").val()
            var DepartmentID = $("#Maintenance_Department").val()
            var DesignationID = $("#Maintenance_DesignationID").val()
            var emailReg = /^([\w-\.]+@@([\w-]+\.)+[\w-]{2,4})?$/;

            if (CompanyID == "" || Fullname == "" || Username == "" || EmailAddress == "" ||
                RoleID == "" || GroupID == "" || DepartmentID == "" || DesignationID == "") {
                return false;
            }
            if (!emailReg.test(EmailAddress)) {
                $.toast({
                    heading: "Invalid Format",
                    text: "Please, Check your Email Address.",
                    showHideTransition: 'slide',
                    autoHideDelay: 3000,
                    icon: 'error',
                    position: 'top-right',
                    bgColor: '#FF4859'
                });
                return false;
            }

            event.preventDefault();
            event.stopImmediatePropagation();
            var action = $("#formvalidationtooltip").attr("action");
            bootbox.confirm({
                title: "Are you sure you want to save?",
                message: "This user will be added.",
                size: "small",
                buttons: {
                    confirm: {
                        label: 'Yes',
                        className: 'btn-success'
                    },
                    cancel: {
                        label: 'No',
                        className: 'btn-danger'
                    }
                },
                callback: function (result) {

                    if (result) {

                        $.ajax({
                            url: action,
                            type: "POST",
                            contentType: "application/json",
                            data: JSON.stringify({
                                CompanyID: CompanyID,
                                Fullname: Fullname,
                                Username: Username,
                                EmailAddress: EmailAddress,
                                RoleID: RoleID,
                                GroupID: GroupID,
                                DepartmentID: DepartmentID,
                                DesignationID: DesignationID,
                            }),
                            dataType: "json",
                            success: function (data) {
                                if (data == Username) {
                                    $.toast({
                                        heading: "Invalid Username",
                                        text: "Username is already exists.",
                                        showHideTransition: 'slide',
                                        icon: 'error',
                                        autoHideDelay: 3000,
                                        position: 'top-right',
                                        bgColor: '#FF4859'
                                    });
                                    return false;
                                }
                                else {

                                    var $this = $("#btnSave");
                                    $this.button('loading');
                                    setTimeout(function () {
                                        $this.button('reset');
                                        window.location.reload();
                                    }, 3000);

                                    $.toast({
                                        heading: "User Management",
                                        text: Fullname + " successfully added",
                                        showHideTransition: 'slide',
                                        icon: 'success',
                                        autoHideDelay: 3000,
                                        position: 'top-right',
                                        bgColor: '#7EC857'
                                    });


                                }

                            }
                        });

                    }

                    else {
                        return;
                    }
                }
            })

        })

    </script>

}



