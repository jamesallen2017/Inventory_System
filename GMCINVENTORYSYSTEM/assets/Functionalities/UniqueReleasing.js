
/*
* jQuery.ajaxQueue - A queue for ajax requests
* 
* (c) 2011 Corey Frang
* Dual licensed under the MIT and GPL licenses.
*
* Requires jQuery 1.5+
*/ 
(function($) {

    // jQuery on an empty object, we are going to use this as our Queue
    var ajaxQueue = $({});

    $.ajaxQueue = function( ajaxOpts ) {
        var jqXHR,
            dfd = $.Deferred(),
            promise = dfd.promise();

        // queue our ajax request
        ajaxQueue.queue( doRequest );

        // add the abort method
        promise.abort = function( statusText ) {

            // proxy abort to the jqXHR if it is active
            if ( jqXHR ) {
                return jqXHR.abort( statusText );
            }

            // if there wasn't already a jqXHR we need to remove from queue
            var queue = ajaxQueue.queue(),
                index = $.inArray( doRequest, queue );

            if ( index > -1 ) {
                queue.splice( index, 1 );
            }

            // and then reject the deferred
            dfd.rejectWith( ajaxOpts.context || ajaxOpts,
                [ promise, statusText, "" ] );

            return promise;
        };

        // run the actual query
        function doRequest( next ) {
            jqXHR = $.ajax( ajaxOpts )
                .done( dfd.resolve )
                .fail( dfd.reject )
                .then( next, next );
        }

        return promise;
    };
})(jQuery);

$("#TableItemReleasing #ItemReleasing").on('click', function () {

    var row = $(this).closest("tr");

    var ReferenceNo = $("#item_ReferenceNo", row).val();
    var GroupName = $("#item_GroupName", row).val();
    var Designation = $("#item_Designation", row).val();
    var Purpose = $("#item_Purpose", row).val();

    $("#Satellite_ReferenceNo").val(ReferenceNo);
    $("#Purpose").html(Purpose);

    $("#Satellite_DateReleased").datepicker('setDate', new Date().toString('MM/dd/yyyy'));
    var ReferenceNo = $("#Satellite_ReferenceNo").val();

    $.ajaxQueue({
        url: '/Home/RetreiveItemUniqueForReleasing/',
        type: "POST",
        data: JSON.stringify({
            ReferenceNo: ReferenceNo
        }),
        contentType: "application/json",
        dataType: "json",
        success: function (data) {
            var TableItemForReleasing = $('#TableItemRequestForReleasing tbody');
            TableItemForReleasing.empty();

            $(data).each(function (index, data) {
                TableItemForReleasing.append('<tr><td>' + data.StockNo + '</td><td>' + data.ItemName + '</td><td class="text-center">' + data.StockOnHand + '</td><td class="text-center">' + data.Qty + '</td><td class="text-center">' + data.Delivered
                    + '</td><td><input type="text" class="form-control text-center" id="ItemCount" oninput="isNumber(this)"></td><td style="display:none;"><input type="text" class="form-control" value="' + data.StockNo
                    + '" id="HiddenStockNo"></td><td style="display:none;"><input type="text" class="form-control" value="' + data.ItemName
                    + '" id="HiddenItemName"></td><td style="display:none;"><input type="text" class="form-control" value="' + data.Qty
                    + '" id="HiddenQty"></td><td style="display:none;"><input type="text" class="form-control" value="' + data.Delivered
                    + '" id="HiddenDelivered"></td><td style="display:none;"><input type="text" class="form-control" value="' + data.StockOnHand
                    + '" id="HiddenRemainingStock"></td></tr>');
            });

            $("#TableItemRequestForReleasing tbody tr").each(function () { //Loop through the Table rows
                var row = $(this);

                var qty = $("#HiddenQty", row).val();
                var collected = $("#HiddenDelivered", row).val();
                if (collected == qty) {
                    $('#ItemCount', row).attr('disabled', 'disabled');
                    //$('#ItemCount', row).attr('placeholder',"Released");
                }
                else {
                    $('#ItemCount', row).attr('placeholder', qty - collected);
                }

            });
        },
        error: function(err){
            alert(err);
        }
    });
    $('#myModal8').modal({
        show: 'false',
        backdrop: 'static',
    });
})

$('#TableItemReleasing').DataTable({
    order: [[3, "desc"]],
    lengthMenu: [[5, 10, 15, 20, 50, -1], [5, 10, 15, 20, 50, "All"]],
    //dom: "<'row'<'col-md-3'l><'col-md-3'f>>" + //set column size
    //     "<'row'<'col-md-12'tr>>" +
    //     "<'row'<'col-md-5'i><'col-md-7'p>>",
}).rows().iterator('row', function (context, index) {
    var node = $(this.row(index).node());
    //node.context is element of tr generated by jQuery DataTables.
});

$(document).ready(function () {
    $('.js-datepicker').datepicker({
        endDate: new Date(),
        todayHighlight: true,
    });
})

$("#formvalidationtooltip").submit("#btnUpdate", function () {

    var DateReleased = $("#Satellite_DateReleased").val()
    var ReferenceNo = $("#Satellite_ReferenceNo").val()
    var validation = false;
    var count = 0;

    if (DateReleased == "") { return false; }

    var ItemRequestList = new Array();
    $("#TableItemRequestForReleasing tbody tr").each(function () { //Loop through the Table rows
        var row = $(this);

        var qty = $("#ItemCount", row).val();
        var a = 0;
        var b = 0;
        var c = 0;
        var d = 0;

        a = parseFloat($("#HiddenDelivered", row).val());
        b = parseFloat($("#HiddenQty", row).val());
        c = parseFloat($("#ItemCount", row).val());
        d = a + c;

        if (d > b) {

            $.toast({
                heading: "Quantity Limit.",
                text: "Released item/s Exceeds the Requested Quantity Limit.",
                showHideTransition: 'slide',
                icon: 'error',
                autoHideDelay: 3000,

                position: 'top-right',
                bgColor: '#FF4859'
            });
            validation = true;
            return false;
        }
        else if (c <= 0) {

            $.toast({
                heading: "Invalid.",
                text: "0 is not allowed.",
                showHideTransition: 'slide',
                icon: 'error',
                autoHideDelay: 3000,

                position: 'top-right',
                bgColor: '#FF4859'
            });
            validation = true;
            return false;
        }

        if (qty != "" && qty != null) {
            count++;
        }

        var RequestItem = {}; // SET DATA ARRAY TO STORED ALL DATA INSIDE OF TABLE

        RequestItem.StockNo = $("#HiddenStockNo", row).val();
        RequestItem.ItemName = $("#HiddenItemName", row).val();
        RequestItem.Qty = $("#HiddenQty", row).val();
        RequestItem.collected = $("#HiddenDelivered", row).val();
        RequestItem.itemReleased = $("#ItemCount", row).val();
        ItemRequestList.push(RequestItem); // RENDER DATA ARRAY TO JSON ARRAY
    });

    if (validation == true) {
        return false;
    }
            
    if (count == 0) {
        $.toast({
            heading: "Information.",
            text: "Please, release at least one item.",
            showHideTransition: 'slide',
            icon: 'error',
            autoHideDelay: 3000,

            position: 'top-right',
            bgColor: '#FF4859'
        });
        return false;
    }

    var TransactionDetailList = new Array(); // For transaction code
    $("#TableItemRequestForReleasing tbody tr").each(function () { //Loop through the Table rows
        var row = $(this);

        var Items = {}; // SET DATA ARRAY TO STORED ALL DATA INSIDE OF TABLE

        var Release = parseFloat($("#ItemCount", row).val());
        var Qty = parseFloat($("#HiddenQty", row).val());
        var RemainingStock = parseFloat($("#HiddenRemainingStock", row).val());
        var Stock = RemainingStock - Release;

        Items.TransactionType = "1";
        Items.Item = $("#HiddenStockNo", row).val();
        Items.TransStockOnHand = RemainingStock;
        Items.RemainingStock = Stock;
        Items.Quantity = $("#ItemCount", row).val();
        TransactionDetailList.push(Items); // RENDER DATA ARRAY TO JSON ARRAY
    });

    event.preventDefault();
    event.stopImmediatePropagation();
    bootbox.confirm({
        title: "Are you sure you want to release?",
        message: "Item Inventory will be updated.",
        size: "small",
        buttons: {
            confirm: {
                label: 'Yes',
                className: 'btn-success'
            },
            cancel: {
                label: 'No',
                className: 'btn-danger'
            }
        },
        callback: function (result) {

            if (result) {
                var action = $("#formvalidationtooltip").attr("action");

                $.ajax({
                    url: action,
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({
                        ItemRequestList,
                        TransactionDetailList,
                        DateReleased: DateReleased,
                        ReferenceNo: ReferenceNo,
                    }),
                    dataType: "json",
                    success: function (data) {

                        if (data == 0) {
                            $.toast({
                                heading: "Error",
                                text: "Fill out Receive item at least one.",
                                showHideTransition: 'slide',
                                icon: 'error',
                                autoHideDelay: 3000,

                                position: 'top-right',
                                bgColor: '#FF4859'
                            });
                            return false;
                        }

                        else if (data == "outofstock") {
                            $.toast({
                                heading: "Out of Stock",
                                text: "Insufficient Stock.",
                                showHideTransition: 'slide',
                                icon: 'error',
                                autoHideDelay: 3000,

                                position: 'top-right',
                                bgColor: '#FF4859'
                            });
                            return false;
                        }


                        else if (data == "system_error") {
                            $.toast({
                                heading: "System Error",
                                text: "Contact our administrator for assistance.",
                                showHideTransition: 'slide',
                                icon: 'error',
                                autoHideDelay: 3000,

                                position: 'top-right',
                                bgColor: '#FF4859'
                            });
                            return false;
                        }

                        else {

                            $.toast({
                                heading: 'Item Released.',
                                text: data.itemCount + " Item/s successfully Released.",
                                showHideTransition: 'slide',
                                icon: 'success',
                                autoHideDelay: 3000,
                                position: 'top-right',
                                bgColor: '#7EC857'
                            });
                            var $this = $("#btnUpdate");
                            $this.button('loading');
                            setTimeout(function () {
                                $this.button('reset');
                                window.location.reload();
                            }, 3000);


                            if (data.ItemOutStock != 0) {

                                $.toast({
                                    heading: "Warning.",
                                    text: data.ItemOutStock + " Item/s reached the safety stock.",
                                    showHideTransition: 'slide',
                                    icon: 'warning',
                                    autoHideDelay: 3000,
                                    position: 'top-right',
                                    bgColor: '#FF4859'
                                });

                            }

                            return false;
                        }

                    }
                });

            }

            else {
                return;
            }
        }
    })



})

$("#btnItemLocate").on("click", function () {
    var all = "";
    $("#TableItemRequestForReleasing tbody tr").each(function () {
        var row = $(this);
        var x = $("#HiddenStockNo", row).val();
        if (all == "") {
            all = x;
        }
        else {
            all = all + "," + x
        }
    })
    event.preventDefault();
    event.stopImmediatePropagation();

    $.ajax({
        url: '/Home/GetItemLocation',
        type: "post",
        contentType: "application/json",
        data: JSON.stringify({
            StockNo: all
        }),
        dataType: "json",
        success: function (resultData) {
            window.open("/Report/ItemLocationReports/");
        }
    });

})